---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: tableitem.dynamodb.aws.platform.upbound.io
  labels:
    provider: aws
spec:
  compositeTypeRef:
    apiVersion: dynamodb.aws.platform.upbound.io/v1alpha1
    kind: XTableItem

  mode: Pipeline
  pipeline:
#   - step: patch-and-transform
#     functionRef:
#       name: function-patch-and-transform
#     input:
#       apiVersion: pt.fn.crossplane.io/v1beta1
#       kind: Resources
#       resources:
#         - name: xTableItems
#           base:
#             apiVersion: dynamodb.aws.platform.upbound.io/v1alpha1
#             kind: XTableItems
#           patches:
#             - type: FromCompositeFieldPath
#               fromFieldPath: spec.parameters.providerConfigName
#               toFieldPath: spec.providerConfigRef.name
#             - type: FromCompositeFieldPath
#               fromFieldPath: spec.parameters.deletionPolicy
#               toFieldPath: spec.deletionPolicy
#             - type: FromCompositeFieldPath
#               fromFieldPath: spec.parameters.region
#               toFieldPath: spec.forProvider.region
#             - type: FromCompositeFieldPath
#               fromFieldPath: spec.parameters.hashKey
#               toFieldPath: spec.parameters.hashKey
#             - type: FromCompositeFieldPath
#               fromFieldPath: spec.parameters.item
#               toFieldPath: spec.parameters.item
#             - type: FromCompositeFieldPath
#               fromFieldPath: spec.parameters.rangeKey
#               toFieldPath: spec.parameters.rangeKey
#             - type: FromCompositeFieldPath
#               fromFieldPath: spec.parameters.tableName
#               toFieldPath: spec.parameters.tableName
#             - fromFieldPath: status.atProvider
#               toFieldPath: status.dynamodbTableItems

    - step: go-templating
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{ $parameters := .observed.composite.resource.spec.parameters }}
            {{- range $i, $tableItem := $parameters.tableItems }}
            ---
            apiVersion: dynamodb.aws.upbound.io/v1beta1
            kind: TableItem
            metadata:
              annotations:
                {{ setResourceNameAnnotation (print "item-" $i) }}
            spec:
              deletionPolicy: {{ $parameters.deletionPolicy }}
              forProvider:
                region: {{ $parameters.region }}
                hashKey: {{ $parameters.hashKey }}
                rangeKey: {{ $parameters.rangeKey }}
                item: {{ $tableItem.item }}
                tableName: {{ $parameters.tableName }}
            {{ end }}

    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: function-auto-ready
