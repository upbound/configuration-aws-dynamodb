---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xtablewithreplicas.dynamodb.aws.platform.upbound.io
spec:
  group: dynamodb.aws.platform.upbound.io
  names:
    kind: XTableWithReplica
    plural: xtablewithreplicas
  defaultCompositionRef:
    name: tablewithreplica.dynamodb.aws.platform.upbound.io
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                parameters:
                  description: >-
                    Upbound Platform DynamoDB Table
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                        - Delete
                        - Orphan
                      type: string
                      default: Delete
                    # Replica Table Parameters
                    kmsKeyArn:
                      description: 'ARN of the CMK that should be used for the AWS KMS
                        encryption. This argument should only be used if the key is
                        different from the default KMS-managed DynamoDB key, alias/aws/dynamodb.
                        Note: This attribute will not be populated with the ARN of default
                        keys.'
                      type: string
                    kmsKeyArnRef:
                      description: Reference to a Key in kms to populate kmsKeyArn.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    kmsKeyArnSelector:
                      description: Selector for a Key in kms to populate kmsKeyArn.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels
                            is selected.
                          type: object
                        policy:
                          description: Policies for selection.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      type: object
                    pointInTimeRecovery:
                      description: Whether to enable Point In Time Recovery for the
                        replica. Default is false.
                      type: boolean
                    tableReplicaRegion:
                      description: Region is the region you'd like your resource to
                        be created in.
                      type: string
                    tableClassOverride:
                      description: Storage class of the table replica. Valid values
                        are STANDARD and STANDARD_INFREQUENT_ACCESS. If not used, the
                        table replica will use the same class as the global table.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                      x-kubernetes-map-type: granular
                    # Table Parameters
                    attribute:
                      description: >-
                        Set of nested attribute definitions.
                        Only required for hash_key and range_key
                        attributes. See below.
                      items:
                        properties:
                          name:
                            description: >-
                              Name of the attribute
                            type: string
                          type:
                            description: >-
                              Attribute type.
                              Valid values are S (string),
                              N (Number),B (binary).
                            type: string
                            enum: ["N", "S", "B"]
                        type: object
                      type: array
                    billingMode:
                      description: >-
                        Controls how you are charged for read and
                        write throughput and how you manage capacity.
                        The valid values are PROVISIONED and
                        PAY_PER_REQUEST. Defaults to PROVISIONED.
                      type: string
                      enum: ["PROVISIONED", "PAY_PER_REQUEST"]
                      default: "PROVISIONED"
                    deletionProtectionEnabled:
                      description: >-
                        Enables deletion protection for table.
                        Defaults to false.
                      type: boolean
                      default: false
                    globalSecondaryIndex:
                      description: Describe a GSI for the table; subject to the normal
                        limits on the number of GSIs, projected attributes, etc. See
                        below.
                      items:
                        properties:
                          hashKey:
                            description: Name of the hash key in the index; must be
                              defined as an attribute in the resource.
                            type: string
                          name:
                            description: Name of the index.
                            type: string
                          nonKeyAttributes:
                            description: Only required with INCLUDE as a projection
                              type; a list of attributes to project into the index.
                              These do not need to be defined as attributes on the table.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          projectionType:
                            description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                              projects every attribute into the index, KEYS_ONLY projects  into
                              the index only the table and index hash_key and sort_key
                              attributes ,  INCLUDE projects into the index all of the
                              attributes that are defined in non_key_attributes in addition
                              to the attributes that thatKEYS_ONLY project.
                            type: string
                          rangeKey:
                            description: Name of the range key; must be defined
                            type: string
                          readCapacity:
                            description: Number of read units for this index. Must be
                              set if billing_mode is set to PROVISIONED.
                            type: number
                          writeCapacity:
                            description: Number of write units for this index. Must
                              be set if billing_mode is set to PROVISIONED.
                            type: number
                        type: object
                      type: array
                    hashKey:
                      description: >-
                        Attribute to use as the hash (partition) key.
                        Must also be defined as an attribute.
                      type: string
                    importTable:
                      description: Import Amazon S3 data into a new table. See below.
                      items:
                        properties:
                          inputCompressionType:
                            description: |-
                              Type of compression to be used on the input coming from the imported table.
                              Valid values are GZIP, ZSTD and NONE.
                            type: string
                          inputFormat:
                            description: |-
                              The format of the source data.
                              Valid values are CSV, DYNAMODB_JSON, and ION.
                            type: string
                          inputFormatOptions:
                            description: |-
                              Describe the format options for the data that was imported into the target table.
                              There is one value, csv.
                              See below.
                            items:
                              properties:
                                csv:
                                  description: 'This block contains the processing options
                                    for the CSV file being imported:'
                                  items:
                                    properties:
                                      delimiter:
                                        description: The delimiter used for separating
                                          items in the CSV file being imported.
                                        type: string
                                      headerList:
                                        description: List of the headers used to specify
                                          a common header for all source CSV files being
                                          imported.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                    type: object
                                  type: array
                              type: object
                            type: array
                          s3BucketSource:
                            description: |-
                              Values for the S3 bucket the source file is imported from.
                              See below.
                            items:
                              properties:
                                bucket:
                                  description: The S3 bucket that is being imported
                                    from.
                                  type: string
                                bucketOwner:
                                  description: The account number of the S3 bucket that
                                    is being imported from.
                                  type: string
                                keyPrefix:
                                  description: The key prefix shared by all S3 Objects
                                    that are being imported.
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    localSecondaryIndex:
                      description: Describe an LSI on the table; these can only be allocated
                        at creation so you cannot change this definition after you have
                        created the resource. See below.
                      items:
                        properties:
                          name:
                            description: Name of the index
                            type: string
                          nonKeyAttributes:
                            description: Only required with INCLUDE as a projection
                              type; a list of attributes to project into the index.
                              These do not need to be defined as attributes on the table.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                              projects every attribute into the index, KEYS_ONLY projects  into
                              the index only the table and index hash_key and sort_key
                              attributes ,  INCLUDE projects into the index all of the
                              attributes that are defined in non_key_attributes in addition
                              to the attributes that thatKEYS_ONLY project.
                            type: string
                          rangeKey:
                            description: Name of the range key.
                            type: string
                        type: object
                      type: array
                    pointInTimeRecovery:
                      description: Enable point-in-time recovery options. See below.
                      items:
                        properties:
                          enabled:
                            description: Whether to enable point-in-time recovery. It
                              can take 10 minutes to enable for new tables. If the point_in_time_recovery
                              block is not provided, this defaults to false.
                            type: boolean
                        type: object
                      type: array
                    rangeKey:
                      description: >-
                        Attribute to use as the range (sort) key.
                        Must also be defined as an attribute.
                      type: string
                    region:
                      description: >-
                        Region is the region you'd
                        like your resource to be created in.
                      type: string
                    readCapacity:
                      description: >-
                        Number of read units for this index.
                        Must be set if billing_mode is set to PROVISIONED.
                      type: integer
                    replica:
                      description: Configuration block(s) with DynamoDB Global Tables
                        V2 (version 2019.11.21) replication configurations. See below.
                      items:
                        properties:
                          kmsKeyArn:
                            description: 'ARN of the CMK that should be used for the
                              AWS KMS encryption. This argument should only be used
                              if the key is different from the default KMS-managed DynamoDB
                              key, alias/aws/dynamodb. Note: This attribute will not
                              be populated with the ARN of default keys.'
                            type: string
                          pointInTimeRecovery:
                            description: Whether to enable Point In Time Recovery for
                              the replica. Default is false.
                            type: boolean
                          propagateTags:
                            description: 'Whether to propagate the global table''s tags
                              to a replica. Default is false. Changes to tags only move
                              in one direction: from global (source) to replica. In
                              other words, tag drift on a replica will not trigger an
                              update. Tag or replica changes on the global table, whether
                              from drift or configuration changes, are propagated to
                              replicas. Changing from true to false on a subsequent
                              apply means replica tags are left as they were, unmanaged,
                              not deleted.'
                            type: boolean
                          regionName:
                            description: Region name of the replica.
                            type: string
                        type: object
                      type: array
                    restoreDateTime:
                      description: Time of the point-in-time recovery point to restore.
                      type: string
                    restoreSourceName:
                      description: Name of the table to restore. Must match the name
                        of an existing table.
                      type: string
                    restoreToLatestTime:
                      description: If set, restores table to the most recent point-in-time
                        recovery point.
                      type: boolean
                    serverSideEncryption:
                      description: Encryption at rest options. AWS DynamoDB tables are
                        automatically encrypted at rest with an AWS-owned Customer Master
                        Key if this argument isn't specified. See below.
                      items:
                        properties:
                          enabled:
                            description: Whether or not to enable encryption at rest
                              using an AWS managed KMS customer master key (CMK). If
                              enabled is false then server-side encryption is set to
                              AWS-owned key (shown as DEFAULT in the AWS console). Potentially
                              confusingly, if enabled is true and no kms_key_arn is
                              specified then server-side encryption is set to the default
                              KMS-managed key (shown as KMS in the AWS console). The
                              AWS KMS documentation explains the difference between
                              AWS-owned and KMS-managed keys.
                            type: boolean
                          kmsKeyArn:
                            description: 'ARN of the CMK that should be used for the
                              AWS KMS encryption. This argument should only be used
                              if the key is different from the default KMS-managed DynamoDB
                              key, alias/aws/dynamodb. Note: This attribute will not
                              be populated with the ARN of default keys.'
                            type: string
                        type: object
                      type: array
                    streamEnabled:
                      description: Whether Streams are enabled.
                      type: boolean
                    streamViewType:
                      description: When an item in the table is modified, StreamViewType
                        determines what information is written to the table's stream.
                        Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
                      type: string
                    tableClass:
                      description: |-
                        Storage class of the table.
                        Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
                        Default value is STANDARD.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                      x-kubernetes-map-type: granular
                    ttl:
                      description: Configuration block for TTL. See below.
                      items:
                        properties:
                          attributeName:
                            description: Name of the table attribute to store the TTL
                              timestamp in.
                            type: string
                          enabled:
                            description: Whether TTL is enabled.
                            type: boolean
                        type: object
                      type: array
                    writeCapacity:
                      description: >-
                        Number of write units for this index.
                        Must be set if billing_mode is set to PROVISIONED.
                      type: integer
                    providerConfigName:
                      description: >-
                        Crossplane ProviderConfig to use for
                        provisioning the resources.
                      type: string
                      default: default
                  required:
                    - deletionPolicy
                    - providerConfigName
                    - region
                  type: object
              required:
                - parameters
            status:
              properties:
                dynamodbTable:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                dynamodbTableReplica:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
